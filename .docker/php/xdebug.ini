; already loaded in /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
;zend_extension=xdebug

; FIXME : should be elsewhere, like docker-php.ini
error_log = /var/log/php-errors.log
catch_workers_output = yes

[xdebug]
; 'debug' means we're enabling step-by-step debugging
xdebug.mode=debug

xdebug.client_port=9003

; xdebug.client_host is the IP address of the system where VS Code runs
; that IP address is DIFFERENT depending on WHERE VS Code is launched in Windows/Mac, WSL, Container/devcontainer/codespaces 
;
; the PHP container sends debugging data OUT to xdebug.client_host:xdebug.client_port


; localhost is used when running btoh VS Code and PHP from within **the same PHP container**
; after opening the project in the Container
xdebug.client_host=localhost

; if using Docker Desktop 'host.docker.internal' is supposed to hold the IP Address of 
; the Docker host, but that's not always true. DOUBLE-CHECK

;xdebug.client_host=host.docker.internal

; 'yes': This will always initiate a debugging, profiling, or tracing session as soon as a request is received, without needing any specific trigger
; 'no' : This will never initiate a session regardless of the presence of any trigger
; 'trigger' : This will initiate a session only if a specific trigger, like a GET/POST variable or a cookie, is present in the request.
xdebug.start_with_request=yes

; OPTIONAL: idekey
; in the browser add a URL param , if not using a browser utility
; url.to.debug?XDEBUG_SESSION_START=PHPSTORM
; sets up a coockie called "XDEBUG_SESSION_START" with the value "PHPSTORM", which is the "trigger"
; xdebug.idekey=PHPSTORM

; defines a log file. This is created, with touch, and initialized (permissions) in the PHP container Dockerfile
xdebug.log=/tmp/xdebug.log